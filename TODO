# PENSE BETE

####################       FAIRE UN BACKLOG DIGNE DE CE NOM       ###################### ^^

chaque build doit avoir un écran log

calcul de complexité

fumer les TODO (dans le code)

chaque build lance asynchronement et non intrusivement dans le projet :                                                             ####### WIP
    - calcul metadatas
    - test code covergae
    - scalastyle

récupérer le code à scanner via git                                                                                                 ####### OK

permettre un build avec des données déjà produites (checkstyle.xml, scct report, etc...)

permettre d'utiliser son propre fichier de config scalastyle pour le build

ecran de configuration du projet à scanner

séparer la partie affichage de l'appli des outils de calculs des métriques

permettre l'export des métriques (checkstyle.xml, etc...)

ecran de build permet de voir ou en est chaque étape
    - calcul code coverage
    - analyse métriques
    - ...

scala-radar fournit API REST (html, json) => permet aux utilisateurs de charger une page "buildwall" custom en html/css/js

métriques d'évolutions
    - flèche progression, regresison, stagnation
    - différents graphiques (eventsourcing ???...)


Objectif
    utiliser plugin scct dans le play/sbt du serveur scala-radar                                                                    ####### OK
    installer scalastyle-batch                                                                                                      ####### OK

Questions :
    Comment je sais si le build play/sbt est fini ?
    Comment je sais combien de tests sont passés/échoués ? Y-a-t-il un moyen de la savoir programmatiquement parlant via sbt api ?
    Utiliser un watcher java pour voir si tel ou tel fichier est créer ? ou utiliser des run bloquant avec ping quand fini ?

exclude some path pour scct sur playframework

vérifier que tous les soft nécessaire au fonctionnement de scala-radar sont présent au démarrage de l'appli (sbt/play avec scct, scala-style batch)

permettre des sandbox build (en shintant certaisn sub-build par exemple) pour des feedback plus rapide pour dev

liens utiles :
    SSE + play :
        https://gist.github.com/sadache/3072893
        http://www.touilleur-express.fr/2012/08/05/realtime-web-application-un-exemple-avec-play2/
        http://www.html5rocks.com/en/tutorials/eventsource/basics/
        http://mandubian.com/2013/09/22/play-actor-room/

    Testing actor :
        http://hs.ljungblad.nu/post/69922869833/testing-parent-child-relationships-in-akka